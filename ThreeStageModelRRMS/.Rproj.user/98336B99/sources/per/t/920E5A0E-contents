############################################################
#       Master analysis for IPD & AD NMR Prediction MODEL,
#             with observational data & RCTS,
#
############################################################

##find the results: "C:/Users/kc19o338/Desktop/Real world predictions project/ThreeStageModel_Results.RData")


##########################################################
############### LIBRARIES #################################
### Load needed variables
library(readxl)
library(dplyr)
library(rms)
library(lme4)
library(R2jags)
library(vcd)
library(glmnet)
library(xlsx)
library(ggpubr)
library(gridExtra)
library(devtools)
library(pROC)
library(plyr)
library(tidyverse)
library(CalibrationCurves)

#setwd("C:/Users/kc19o338/Documents/GitHub/Reproduce-results-from-papers/ThreeStageModelRRMS")
##############################################################################################################################
######################## STAGE 1 - DEVELOPMENT AND VALIDATION OF THE PROGNOSTIC MODEL  ########################
###############################             USING OBSERVATIONAL DATA            ################################3
###############################################################################################################

### Need for the SMSC dataset

## Code for the 1st stage available in:
#https://github.com/htx-r/Reproduce-results-from-papers/tree/master/PrognosticModelRRMS
#results loaded
#load("C:/Users/kc19o338/Desktop/Real world predictions project/Prognostic_model_SMSC.Rdata")
##############################################################################################################################
#########                    STAGE 2              ###########
#####          RECALIBRATION FOR THE RCTs DATASET  #########################################
###############################################################################################################3
###############################################################################################################

################ IPD DATA (3 RCTS & Placebo-arms from RCTs) ###############
###### Load the data for the 3 RCTs and the Placebo-arms RCTs
mydatapath="C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/data/IPD data from 6 Biogen trials"
mydatapath1="C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/Placebo Arms"
######## load data
###cleaning the data from BIOGEN, defined the outcomes in columns: RELAPSE02Year, RELAPSE01Year, names of Treatments and Drugs
source("R/CleanBiogenEdited.fun.R")
cleanBIOGENtrials<-CleanBiogenEdited.fun(mydatapath)
source("R/cleanPLACEBOtrialsEdited.fun.R")
PlaceboArms<-CleanPlaceboTrialsEdited.fun(mydatapath1)
#use only those needed
RCTs0<-cleanBIOGENtrials$adsl01
RCTs0$TRT01A[which(RCTs0$TRT01A=="AVONEXÂ® 30 mcg")]<-"Avonex"
###drop SENTTINEL STUDY because of combination of treatments and
### drop ADVANCE study because does not provide information for Relapse in 2 years (only for 1 year)
RCTs<-RCTs0[RCTs0$STUDYID!="SENTINEL" & RCTs0$STUDYID!="ADVANCE" ,]

##### Recalibration

##fix the data to be the same as SMSC (proper transformations) and add the variable Risk
## with the pooled estimates of stage 1 (published and described in the relevant to stage 1 paper)
source("RCTsData.R")
# recalibrate the model for the RCTs (use of 4 different methods and we selected the one with the highest AUC)
source("Recalibration.R")
#plots for the risk distribution in RCTs
source("PlotsRCTs.R")
# The Distribution of risk in the whole dataset
RiskDistribution
#The distribution of risk for those who relapsed and did not relapse
RiskPrFactor
# statistical signifant different Risk score for those
# who relapsed and for those who didn't
t.test(RiskData$Risknew4[RiskData$outcome==1])
t.test(RiskData$Risknew4[RiskData$relapse.2y.after.study==0])

#AUC in RCTs
#recalibration method 1
app_cstat_model2$auc #0.58
#recalibration method 2
app_cstat_model3$auc #0.58
#recalibration method 3
app_cstat_model4$auc #0.61
# calibration slope and intercept in RCTs
glm(outcome~logitp4,family="binomial",data=RiskData) #c-intercept=0.0, c-slope=1

##############################################################################################################################
######################## STAGE 3 - IPD & AD NETWORK META-REGRESSION   #################################################3
################# WITH RISK AS THE ONLY PREDICTOR AND EFFECT MODIFIER    ###################################################3
###############################################################################################################

#data for jags model, the recalibration method was selected for the analysis
source("DataforIPDADNMR.R")

###Step 1 - model for imputing the missing aggregate level covariates
source("R/AD_imputation.R") #source the model will be used for rjags
set.seed(2000)
AD_imputation_results <- jags.parallel(data = jagsdataIPDADNMR,inits=NULL,parameters.to.save = c("ageAD","edssAD","months.since.last.relapseAD","disease.durarionAD","loggenderAD","lognr.Gd.enhanced.lesionsAD","logtreatment.naive.prior.visitAD","lognr.relapses.2y.prior.study1AD","lognr.relapses.2y.prior.study2AD","meanRisk"),model.file = AD_imputation,
                                         n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)



print(AD_imputation_results)

#Step 2 - model IPD & AD NMR
source("R/modelIPDADNMR.R") #source the model will be used for rjags
  #run the model
set.seed(2000)
IPDADNMRJAGSresultsSMSC <- jags.parallel(data = jagsdataIPDADNMR,inits=NULL,parameters.to.save = c("logitpplacebo","logitpplacebo3","logitpplacebo2","g0_placebo3","g0_placebo2","delta","u", "gamma.w", "gamma","logitp_internal2","logitp2","logitp"),model.file = modelIPDADNMR,
                                       n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)


# Results using Bayesian NMR model
print(IPDADNMRJAGSresultsSMSC)
traceplot(IPDADNMRJAGSresultsSMSC$BUGSoutput,varname=c("logitpplacebo","logitpplacebo3","logitpplacebo2","g0_placebo3","g0_placebo2","ORref","u", "gamma.w", "gamma","logitp_internal2","logitp2","logitp"))

set.seed(2000)
IPDADNMRJAGSresultsSMSC_main <- jags.parallel(data = jagsdataIPDADNMR,inits=NULL,parameters.to.save = c("delta", "gamma.w", "gamma"),model.file = modelIPDADNMR,
                                         n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)


# Results using Bayesian NMR model
print(IPDADNMRJAGSresultsSMSC_main)




###############################################################
############ Validation & sensitivity analyses############
###########################################################

#1.Sensitivity analysis for the recalibration methods
#Are the results influenced based on the selected recalibration method?
##recalibration method 1
set.seed(2000)
IPDADNMRJAGSresultsSMSC2 <- jags.parallel(data = jagsdataIPDADNMR_model2,inits=NULL,parameters.to.save = c('gamma.w','gamma.b', 'meanRisk','logitpplacebo','logitpplacebo2','logitpplacebo3','lognr.Gd.enhanced.lesionsAD','gamma', 'ORref','delta','u','loggenderAD', 'meanRisk','months.since.last.relapseAD','ageAD', 'edssAD', 'disease.durationAD', 'logtreatment.naive.prior.visitAD', 'logitp'),model.file = modelIPDADNMR,
                                          n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)

# Results using Bayesian NMR model under recalibration method 1
print(IPDADNMRJAGSresultsSMSC2)
traceplot(IPDADNMRJAGSresultsSMSC2$BUGSoutput,varname=c("ORref","u", "gamma.w", "gamma"))

# recalibration method 2
set.seed(2000)
IPDADNMRJAGSresultsSMSC3 <- jags.parallel(data = jagsdataIPDADNMR_model3,inits=NULL,parameters.to.save = c('gamma.w','gamma.b', 'meanRisk','logitpplacebo','logitpplacebo2','lognr.Gd.enhanced.lesionsAD','gamma', 'ORref','delta','u','loggenderAD', 'meanRisk','months.since.last.relapseAD','ageAD', 'edssAD', 'disease.durationAD', 'logtreatment.naive.prior.visitAD', 'logitp','logitp2'),model.file = modelIPDADNMR,
                                          n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)

# Results using Bayesian NMR model under recalibration method 2
print(IPDADNMRJAGSresultsSMSC3)
traceplot(IPDADNMRJAGSresultsSMSC3$BUGSoutput,varname=c("ORref","u", "gamma.w", "gamma"))

#comparison of final results
source("GraphForPredictedRisk.R")
Graph #final selected model
Graph2 #recalibration method 1 (sensitivity analysis)
Graph3 #recalibration method 2 (sensitivity analysis)
Absolutetable #final selected model
Absolutetable2 #recalibration method 1 (sensitivity analysis)
Absolutetable3 #recalibration method 2 (sensitivity analysis)


#2. Validation of predictions
#Calibration plots of stage 2

#final selected recalibration method (method 3)
Cal_final<-val.prob.ci.2(RiskData$Risknew4, as.numeric(RiskData$outcome)-1, xlim=c(0,0.8))
#recalibration method 1
Cal_2<-val.prob.ci.2(RiskData$Risknew3, as.numeric(RiskData$outcome)-1, xlim=c(0,0.8))
#recalibration method 2
Cal_3<-val.prob.ci.2(RiskData$Risknew2, as.numeric(RiskData$outcome)-1, xlim=c(0,0.8))


##calibration plot of stage 3 (final results)
RiskData$logitp_internal<-IPDADNMRJAGSresultsSMSC$BUGSoutput$mean$logitp_internal2
val.prob.ci.2(expit(RiskData$logitp_internal), as.numeric(RiskData$outcome)-1, xlim=c(0,1))
#source("Calibration Benefit.R")

#Graph for SMSC
source("GraphForPredictedRisk_SMSC.R")
Graph_SMSC

rm(list=ls())
