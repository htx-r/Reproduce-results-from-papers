load("C:/Users/kc19o338/Desktop/Real world predictions project/TwoStageRCTsResults.RData")
##########################################################
############### LIBRARIES #################################
### Load needed variables
library(readxl)
library(dplyr)
library(rms)
library(lme4)
library(R2jags)
library(vcd)
library(glmnet)
library(xlsx)
library(ggpubr)
library(gridExtra)
library(devtools)
library(pROC)
library(plyr)
library(tidyverse)
library(CalibrationCurves)
################ IPD DATA (3 RCTS & Placebo-arms from RCTs) ###############
###### Load the data for the 3 RCTs and the Placebo-arms RCTs
mydatapath="C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/data/IPD data from 6 Biogen trials"
mydatapath1="C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/Placebo Arms"
######## load data
###cleaning the data from BIOGEN, defined the outcomes in columns: RELAPSE02Year, RELAPSE01Year, names of Treatments and Drugs
source("R/CleanBiogenEdited.fun.R")
cleanBIOGENtrials<-CleanBiogenEdited.fun(mydatapath)
source("R/cleanPLACEBOtrialsEdited.fun.R")
PlaceboArms<-CleanPlaceboTrialsEdited.fun(mydatapath1)
#use only those needed
RCTs0<-cleanBIOGENtrials$adsl01
RCTs0$TRT01A[which(RCTs0$TRT01A=="AVONEXÂ® 30 mcg")]<-"Avonex"
###drop SENTTINEL STUDY because of combination of treatments and
### drop ADVANCE study because does not provide information for Relapse in 2 years (only for 1 year)
RCTs<-RCTs0[RCTs0$STUDYID!="SENTINEL" & RCTs0$STUDYID!="ADVANCE" ,]
##fix the data to be the same as SMSC (proper transformations) and add the variable Risk
## with the pooled estimates of stage 1 (published and described in the relevant to stage 1 paper)
source("RCTsData.R")
# recalibrate the model for the RCTs (use of 4 different methods and we selected the one with the highest AUC)
source("Recalibration.R")
#plots for the risk distribution in RCTs
source("PlotsRCTs.R")
# The Distribution of risk in the whole dataset
RiskDistribution
#The distribution of risk for those who relapsed and did not relapse
RiskPrFactor
# statistical signifant different Risk score for those
# who relapsed and for those who didn't
t.test(RiskData$Risknew4[RiskData$outcome==1])
t.test(RiskData$Risknew4[RiskData$relapse.2y.after.study==0])
#AUC in RCTs
#recalibration method 1
app_cstat_model2$auc #0.58
#recalibration method 2
app_cstat_model3$auc #0.58
#recalibration method 3
app_cstat_model4$auc #0.61
# calibration slope and intercept in RCTs
glm(outcome~logitp4,family="binomial",data=RiskData) #c-intercept=0.0, c-slope=1
#data for jags model, the recalibration method was selected for the analysis
source("DataforIPDADNMR.R")
##fix the data to be the same as SMSC (proper transformations) and add the variable Risk
## with the pooled estimates of stage 1 (published and described in the relevant to stage 1 paper)
source("RCTsData.R")
##Variance covariance matrix estimated via the IPD
tokeep<-c("age","gender","edss","disease.duration","months.since.last.relapse","treatment.naive.prior.visit","nr.Gd.enhanced.lesions","nr.relapses.2y.prior.study1","nr.relapses.2y.prior.study2")
df<-RiskData[,(names(RiskData) %in% tokeep)]
cov_matrix<-cov(df)
cov_matrix
round(cov_matrix,3)
write.csv(round(cov_matrix,3), "C:/Users/kc19o338/Documents/GitHub/Reproduce-results-from-papers/ThreeStageModelRRMS/vcv.csv")
cov_matrix2<-cov_matrix
cov_matrix2[1,1]<-6.25^2
cov_matrix2[3,3]<-1.25^2
cov_matrix2[4,4]<-2.7^2
write.csv(round(cov_matrix2,3), "C:/Users/kc19o338/Documents/GitHub/Reproduce-results-from-papers/ThreeStageModelRRMS/vcv.csv")
write.csv(round(cov_matrix2,3), "C:/Users/kc19o338/Documents/GitHub/Reproduce-results-from-papers/ThreeStageModelRRMS/vcv2.csv")
load("C:/Users/kc19o338/Desktop/Real world predictions project/TwoStageRCTsResults.RData")
library(glmnet)
library(xlsx)
library(ggpubr)
library(gridExtra)
library(devtools)
library(pROC)
library(plyr)
library(tidyverse)
library(CalibrationCurves)
############################################################
#       Master analysis for IPD & AD NMR Prediction MODEL,
#             with observational data & RCTS,
#
############################################################
##find the results: "C:/Users/kc19o338/Desktop/Real world predictions project/ThreeStageModel_Results.RData")
##########################################################
############### LIBRARIES #################################
### Load needed variables
library(readxl)
library(dplyr)
library(rms)
library(lme4)
library(R2jags)
library(vcd)
library(glmnet)
library(xlsx)
library(ggpubr)
library(gridExtra)
library(devtools)
library(pROC)
library(plyr)
library(tidyverse)
library(CalibrationCurves)
load("C:/Users/kc19o338/Desktop/Real world predictions project/Prognostic_model_SMSC.RData")
############################################################
#       Master analysis for IPD & AD NMR Prediction MODEL,
#             with observational data & RCTS,
#
############################################################
##find the results: "C:/Users/kc19o338/Desktop/Real world predictions project/ThreeStageModel_Results.RData")
##########################################################
############### LIBRARIES #################################
### Load needed variables
library(readxl)
library(dplyr)
library(rms)
library(lme4)
library(R2jags)
library(vcd)
library(glmnet)
library(xlsx)
library(ggpubr)
library(gridExtra)
library(devtools)
library(pROC)
library(plyr)
library(tidyverse)
library(CalibrationCurves)
################ IPD DATA (3 RCTS & Placebo-arms from RCTs) ###############
###### Load the data for the 3 RCTs and the Placebo-arms RCTs
mydatapath="C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/data/IPD data from 6 Biogen trials"
mydatapath1="C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/Placebo Arms"
######## load data
###cleaning the data from BIOGEN, defined the outcomes in columns: RELAPSE02Year, RELAPSE01Year, names of Treatments and Drugs
source("R/CleanBiogenEdited.fun.R")
cleanBIOGENtrials<-CleanBiogenEdited.fun(mydatapath)
source("R/cleanPLACEBOtrialsEdited.fun.R")
PlaceboArms<-CleanPlaceboTrialsEdited.fun(mydatapath1)
#use only those needed
RCTs0<-cleanBIOGENtrials$adsl01
RCTs0$TRT01A[which(RCTs0$TRT01A=="AVONEXÂ® 30 mcg")]<-"Avonex"
###drop SENTTINEL STUDY because of combination of treatments and
### drop ADVANCE study because does not provide information for Relapse in 2 years (only for 1 year)
RCTs<-RCTs0[RCTs0$STUDYID!="SENTINEL" & RCTs0$STUDYID!="ADVANCE" ,]
##fix the data to be the same as SMSC (proper transformations) and add the variable Risk
## with the pooled estimates of stage 1 (published and described in the relevant to stage 1 paper)
source("RCTsData.R")
# recalibrate the model for the RCTs (use of 4 different methods and we selected the one with the highest AUC)
source("Recalibration.R")
#plots for the risk distribution in RCTs
source("PlotsRCTs.R")
# The Distribution of risk in the whole dataset
RiskDistribution
#The distribution of risk for those who relapsed and did not relapse
RiskPrFactor
# statistical signifant different Risk score for those
# who relapsed and for those who didn't
t.test(RiskData$Risknew4[RiskData$outcome==1])
t.test(RiskData$Risknew4[RiskData$relapse.2y.after.study==0])
#AUC in RCTs
#recalibration method 1
app_cstat_model2$auc #0.58
#recalibration method 2
app_cstat_model3$auc #0.58
#recalibration method 3
app_cstat_model4$auc #0.61
# calibration slope and intercept in RCTs
glm(outcome~logitp4,family="binomial",data=RiskData) #c-intercept=0.0, c-slope=1
#data for jags model, the recalibration method was selected for the analysis
source("DataforIPDADNMR.R")
jagsdataIPDNMR <- list(
Nstudies=3,
Np=sum(as.numeric(table(as.numeric(as.factor(RiskData$STUDYID))))),
studyid=as.numeric(as.factor(RiskData$STUDYID)),
outcome=as.numeric(RiskData$outcome)-1,
treat= rbind(c(3,4,NA),c(1,2,4),c(1,4,NA)),
treatment=as.numeric(RiskData$TRT01A),
na=c(2,3,2),
arm=RiskData$arm,
outcomeP=PlaceboArms$Relapse2year,
NpPlacebo=nrow(RiskData[RiskData$Treatment=="Placebo",]),
logitRisknew=logitRisknew1,
logitmeanRisknew=-0.5632 ,
logitmeanRisknew2=-1.4594,
Nnew=99,
ref=4,
nt=4,
Risk=RiskData$logitp4,
Risk_placebo=RiskData$logitp4[RiskData$Treatment=="Placebo"])
modelIPDNMR<-function(){
###likelihood
for (i in 1:Np){
outcome[i]~dbern(p[i])
###formula
logit(p[i])<-u[studyid[i]] + d[studyid[i], arm[i]]+ (g[studyid[i]]+ g.w[studyid[i],arm[i]])*(Risk[i])
+ (g.b[studyid[i],arm[i]]-g.w[studyid[i],arm[i]])*(meanRisk[studyid[i]])
}
## g fixed across studies
for (i in 1:Nstudies){
g[i]<-gamma
}
#####treatment effect - fixed across studies and correction for multi-arm studies
for(i in 1:Nstudies){
d[i,1] <- 0
w[i,1] <- 0
g.w[i,1]<-0
g.b[i,1]<-0
for(k in 2:na[i]){
d[i,k]<-md[i, k]
md[i, k] <- mean[i, k] + sw[i, k]
w[i, k] <- (d[i, k] - mean[i, k])
sw[i, k] <- sum(w[i, 1:(k - 1)])/(k - 1)
mean[i, k] <- delta[treat[i, k]] - delta[treat[i, 1]]
g.w[i,k]<-gamma.w[treat[i,k]]-gamma.w[treat[i,1]]
g.b[i,k]<-gamma.b[treat[i,k]]-gamma.b[treat[i,1]]
}
}
###priors
gamma~dnorm(0,0.001)
##independent ui for each study
for (i in 1:Nstudies){
u[i]~dnorm(0,0.001)
}
delta[ref] <- 0 # treatment effect is zero for reference treatment = PLACEBO
gamma.w[ref] <- 0
gamma.b[ref] <- 0
for (k in 1:(ref-1)){
delta[k] ~ dnorm(0, 0.001)
gamma.w[k] ~ dnorm(0, 0.001)
gamma.b[k] ~ dnorm(0, 0.001)
}
for (k in (ref+1):nt){
delta[k] ~ dnorm(0, 0.001)
gamma.w[k] ~ dnorm(0, 0.001)
gamma.b[k] ~ dnorm(0, 0.001)
}
###odds for placebo arm via the placebo arm dataset
for (i in 1:NpPlacebo){
outcomeP[i]~dbern(pplacebo[i])
###formula
logit(pplacebo[i])<-logitpplacebo+g0_placebo*Risk_placebo[i]
}
#prior for logitpplacebo
g0_placebo~dnorm(0,0.001)
logitpplacebo~dnorm(0,0.001)
for(j in 1:nt){ORref[j]<- exp(delta[j] - delta[ref])}
##### calculation of predicted risk to new patients
for (i in 1:Nnew){
for(j in 1:nt){
logitp[i,j]<-logitpplacebo+ delta[j]+ (g0_placebo+gamma.w[j])*(logitRisknew[i,1]) + (gamma.b[j]-gamma.w[j])*(logitmeanRisknew)
}
}
#for (i in 1:99){
# for(j in 1:nt){
#  p[i,j]<-exp(logitp[i,j])/(1+exp(logitp[i,j]))
#}
}
modelIPDNMR<-function(){
###likelihood
for (i in 1:Np){
outcome[i]~dbern(p[i])
###formula
logit(p[i])<-u[studyid[i]] + d[studyid[i], arm[i]]+ (g[studyid[i]]+ g.w[studyid[i],arm[i]])*(Risk[i])
+ (g.b[studyid[i],arm[i]]-g.w[studyid[i],arm[i]])*(meanRisk[studyid[i]])
}
## g fixed across studies
for (i in 1:Nstudies){
g[i]<-gamma
}
#####treatment effect - fixed across studies and correction for multi-arm studies
for(i in 1:Nstudies){
d[i,1] <- 0
w[i,1] <- 0
g.w[i,1]<-0
g.b[i,1]<-0
for(k in 2:na[i]){
d[i,k]<-md[i, k]
md[i, k] <- mean[i, k] + sw[i, k]
w[i, k] <- (d[i, k] - mean[i, k])
sw[i, k] <- sum(w[i, 1:(k - 1)])/(k - 1)
mean[i, k] <- delta[treat[i, k]] - delta[treat[i, 1]]
g.w[i,k]<-gamma.w[treat[i,k]]-gamma.w[treat[i,1]]
g.b[i,k]<-gamma.b[treat[i,k]]-gamma.b[treat[i,1]]
}
}
###priors
gamma~dnorm(0,0.001)
##independent ui for each study
for (i in 1:Nstudies){
u[i]~dnorm(0,0.001)
}
delta[ref] <- 0 # treatment effect is zero for reference treatment = PLACEBO
gamma.w[ref] <- 0
gamma.b[ref] <- 0
for (k in 1:(ref-1)){
delta[k] ~ dnorm(0, 0.001)
gamma.w[k] ~ dnorm(0, 0.001)
gamma.b[k] <-gamma.w[k]
}
for (k in (ref+1):nt){
delta[k] ~ dnorm(0, 0.001)
gamma.w[k] ~ dnorm(0, 0.001)
gamma.b[k] <-gamma.w[k]
}
###odds for placebo arm via the placebo arm dataset
for (i in 1:NpPlacebo){
outcomeP[i]~dbern(pplacebo[i])
###formula
logit(pplacebo[i])<-logitpplacebo+g0_placebo*Risk_placebo[i]
}
#prior for logitpplacebo
g0_placebo~dnorm(0,0.001)
logitpplacebo~dnorm(0,0.001)
for(j in 1:nt){ORref[j]<- exp(delta[j] - delta[ref])}
##### calculation of predicted risk to new patients
for (i in 1:Nnew){
for(j in 1:nt){
logitp[i,j]<-logitpplacebo+ delta[j]+ (g0_placebo+gamma.w[j])*(logitRisknew[i,1]) + (gamma.b[j]-gamma.w[j])*(logitmeanRisknew)
}
}
#for (i in 1:99){
# for(j in 1:nt){
#  p[i,j]<-exp(logitp[i,j])/(1+exp(logitp[i,j]))
#}
}
set.seed(2000)
IPDADNMRJAGSresults_ADsens <- jags.parallel(data = jagsdataIPDNMR,inits=NULL,parameters.to.save = c('gamma.w','gamma.b','gamma', 'ORref','delta','u','logitp'),model.file = modelIPDNMR,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
jagsdataIPDNMR <- list(
Nstudies=3,
Np=sum(as.numeric(table(as.numeric(as.factor(RiskData$STUDYID))))),
studyid=as.numeric(as.factor(RiskData$STUDYID)),
outcome=as.numeric(RiskData$outcome)-1,
treat= rbind(c(3,4,NA),c(1,2,4),c(1,4,NA)),
treatment=as.numeric(RiskData$TRT01A),
na=c(2,3,2),
arm=RiskData$arm,
outcomeP=PlaceboArms$Relapse2year,
NpPlacebo=nrow(RiskData[RiskData$Treatment=="Placebo",]),
logitRisknew=logitRisknew1,
logitmeanRisknew=-0.5632 ,
logitmeanRisknew2=-1.4594,
Nnew=99,
ref=4,
nt=4,
Risk=RiskData$logitp4,
Risk_placebo=RiskData$logitp4[RiskData$Treatment=="Placebo"],
meanRisk=c(tapply(RiskData$logitp4, RiskData$STUDYID, summary)$`1`[4],tapply(RiskData$logitp4, RiskData$STUDYID, summary)$`2`[4],tapply(RiskData$logitp4, RiskData$STUDYID, summary)$`3`[4])##here is the mean of logit of risk in AD
)
set.seed(2000)
IPDADNMRJAGSresults_ADsens <- jags.parallel(data = jagsdataIPDNMR,inits=NULL,parameters.to.save = c('gamma.w','gamma.b','gamma', 'ORref','delta','u','logitp'),model.file = modelIPDNMR,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
expit<-function(x) {exp(x)/(1+exp(x))}
p2<-IPDADNMRJAGSresults_ADsens$BUGSoutput$mean$logitp2
p2<-expit(IPDADNMRJAGSresults_ADsens$BUGSoutput$mean$logitp2)
y<-IPDADNMRJAGSresults_ADsens$BUGSoutput$summary[408:803,]
p2<-IPDADNMRJAGSresults_ADsens$BUGSoutput$mean$logitp2
p2<-expit(IPDADNMRJAGSresults_ADsens$BUGSoutput$mean$logitp2)
p2<-IPDADNMRJAGSresults_ADsens$BUGSoutput$mean$logitp
p2<-expit(IPDADNMRJAGSresults_ADsens$BUGSoutput$mean$logitp2)
IPDADNMRJAGSresults_ADsens$BUGSoutput$mean$logitp
p2<-expit(IPDADNMRJAGSresults_ADsens$BUGSoutput$mean$logitp)
p2
####preperation for the graph
###For Dymethyl fumarate- Risk & propability to relapse
DFL<-cbind(Risknew1,p[,1])
####preperation for the graph
###For Dymethyl fumarate- Risk & propability to relapse
DFL<-cbind(Risknew1,p2[,1])
DFL
DFL$Treatment<-"Dimethyl Fumarate"
DFL$Treatment<-"Dimethyl Fumarate"
colnames(DFL)<-c("Risknew","prelapse","Treatment")
DFL
##For Glatimarer acetate  - Risk & propability to relapse
GAL<-cbind(Risknew1,p[,2])
GAL$Treatment<-"Glatiramer Acetate"
##For Glatimarer acetate  - Risk & propability to relapse
GAL<-cbind(Risknew1,p2[,2])
GAL$Treatment<-"Glatiramer Acetate"
colnames(GAL)<-c("Risknew","prelapse","Treatment")
##For Natalizumab acetate - Risk & propability to relapse
NL<-cbind(Risknew1,p2[,3])
NL$Treatment<-"Natalizumab"
colnames(NL)<-c("Risknew","prelapse","Treatment")
##For Placebo - Risk & propability to relapse
PlL<-cbind(Risknew1,p2[,4])
PlL$Treatment<-"Placebo"
colnames(PlL)<-c("Risknew","prelapse","Treatment")
##merge data for all the treatments
GraphdataL<-rbind(DFL,GAL,NL,PlL)
write.xlsx(GraphdataL,"C:/Users/kc19o338/Documents/GitHub/Reproduce-results-from-papers/ThreeStageModelRRMS/Results/GraphData_excludingAD.xls",row.names = F)
GraphdataF<-read_excel("C:/Users/kc19o338/Documents/GitHub/Reproduce-results-from-papers/ThreeStageModelRRMS/Results/GraphData_excludingAD.xls")
GraphdataF
View(GraphdataF)
View(GraphdataF)
Graph_SMSC<-ggplot(GraphdataL, aes(x=Risknew, y=prelapse, group=Treatment)) +
geom_line(aes(color=Treatment))+
geom_point(aes(color=Treatment))+geom_vline(xintercept=0.03925, linetype="dashed", color = "red")+
geom_vline(xintercept=0.66126 , linetype="dashed", color = "red")+xlab("Baseline risk") + ylab("Predicted probability of relapse")
Graph_SMSC
Graph_SMSC
expit<-function(x) {exp(x)/(1+exp(x))}
p2<-IPDADNMRJAGSresults_ADsens$BUGSoutput$mean$logitp
p2<-expit(IPDADNMRJAGSresults_ADsens$BUGSoutput$mean$logitp)
p2
print(IPDADNMRJAGSresults_ADsens)
exp(1.003)
exp(-0.922)
exp(-0.842)
exp(-1.561)
print(exp(IPDADNMRJAGSresults_ADsens))
exp(IPDADNMRJAGSresults_ADsens$BUGSoutput$mean$logitp)
exp(IPDADNMRJAGSresults_ADsens$BUGSoutput$summary)
###Sensitivity analysis excluding AD
source("R/modelIPDNMR.R") #source the model will be used for rjags
##########################################################
############### LIBRARIES #################################
### Load needed variables
library(readxl)
library(dplyr)
library(rms)
library(lme4)
library(R2jags)
library(vcd)
library(glmnet)
library(xlsx)
library(ggpubr)
library(gridExtra)
library(devtools)
library(pROC)
library(plyr)
library(tidyverse)
library(CalibrationCurves)
################ IPD DATA (3 RCTS & Placebo-arms from RCTs) ###############
###### Load the data for the 3 RCTs and the Placebo-arms RCTs
mydatapath="C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/data/IPD data from 6 Biogen trials"
mydatapath1="C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/Placebo Arms"
######## load data
###cleaning the data from BIOGEN, defined the outcomes in columns: RELAPSE02Year, RELAPSE01Year, names of Treatments and Drugs
source("R/CleanBiogenEdited.fun.R")
cleanBIOGENtrials<-CleanBiogenEdited.fun(mydatapath)
source("R/cleanPLACEBOtrialsEdited.fun.R")
PlaceboArms<-CleanPlaceboTrialsEdited.fun(mydatapath1)
write.csv(cleanBIOGENtrials,"C:/Users/kc19o338/Desktop/old profile/Desktop/RealWorldPredictionModel/HTx/data/IPD data from 6 Biogen trials/BIOGENTRIALS_clean")
#use only those needed
RCTs0<-cleanBIOGENtrials$adsl01
RCTs0$TRT01A[which(RCTs0$TRT01A=="AVONEX® 30 mcg")]<-"Avonex"
write.csv(RCTs0,"C:/Users/kc19o338/Desktop/old profile/Desktop/RealWorldPredictionModel/HTx/data/IPD data from 6 Biogen trials/BIOGENTRIALS_clean")
write.csv(PlaceboArms,"C:/Users/kc19o338/Desktop/old profile/Desktop/RealWorldPredictionModel/HTx/data/IPD data from 6 Biogen trials/placeboArms_clean")
write.csv(RCTs0,"C:/Users/kc19o338/Desktop/old profile/Desktop/RealWorldPredictionModel/HTx/data/IPD data from 6 Biogen trials/BIOGENTRIALS_clean.csv")
write.csv(PlaceboArms,"C:/Users/kc19o338/Desktop/old profile/Desktop/RealWorldPredictionModel/HTx/data/IPD data from 6 Biogen trials/placeboArms_clean.csv")
##Load the new variable EDSS dataset
ades<-read_csv("C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/data/IPD data from 6 Biogen trials/ades.csv")
setwd("C:/Users/kc19o338/Documents/GitHub/Reproduce-results-from-papers/Trial_CE")
source("EDSS_variable.R") #data_CPD the new dataset of interest
RCTs<-RCTs0
source("EDSS_variable.R") #data_CPD the new dataset of interest
##Keep from data_CPD dataset the variables you need
source("Final_dataset.R") #data_CPD_final the new dataset of interest
#omit rows with NAs
data_CDP_CC<-na.omit(data_CDP_final) ###2105 patients
View(data_CDP_CC)
write.csv(data_CDP_final,"C:/Users/kc19o338/Desktop/old profile/Desktop/RealWorldPredictionModel/HTx/data/IPD data from 6 Biogen trials/BIOGENTRIALS_clean_withCDPoutcome.csv")
###load the needed libraries
library(devtools)
install_github("htx-r/CleaningData",force=TRUE)
library(CleaningData)
library(R2jags)
library(dplyr)
library(glmpath)
library(readxl)
library(car)
library(glmnet)
library(Hmisc)
library(rms)
library(gridExtra)
library(ggpubr)
library(ggplot2)
library(synthpop)
library(pmsampsize)
library(selectiveInference)
library(plyr)
library(vcd)
library(pROC)
library(DiagrammeR)
#######################################################################################
####################################  DATA   ###########################################
###### Give your path of data
mydatapath="C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/data/IPD data from 6 Biogen trials"
mydatapath1="C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/Placebo Arms"
######## load data
###cleaning the data from BIOGEN, defined the outcomes in columns: RELAPSE02Year, RELAPSE01Year, names of Treatments and Drugs
cleanBIOGENtrials<-cleanBIOGENtrials.fun(mydatapath)
PlaceboArms<-cleanPLACEBOtrials.fun(mydatapath1)
RCTs0<-cleanBIOGENtrials$adsl01
###drop SENTTINEL STUDY because of combination of treatments and
### drop ADVANCE study because does not provide information for Relapse in 2 years (only for 1 year)
RCTs<-RCTs0[RCTs0$STUDYID!="SENTINEL" & RCTs0$STUDYID!="ADVANCE" ,]
### Select variables that I need- exclude variables with a huge ammount of missing values (more than 50%),
#exclude factors with just one category, exclude factors that are transformations from already existing variables)
#exclude highly correlated variables
###and recode them in numerical values (e.g. Male=1, Female=0)
## transformations of continuous variables to approximate normal distribution
