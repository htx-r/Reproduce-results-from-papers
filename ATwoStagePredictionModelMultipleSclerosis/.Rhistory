###load the needed libraries
library(devtools)
install_github("htx-r/CleaningData",force=TRUE)
install_github("htx-r/Reproduce-results-from-papers/ATwoStagePredictionModelMultipleSclerosis/", force = TRUE)
library(ATwoStagePredictionModelMultipleSclerosis)
library(CleaningData)
library(R2jags)
library(glmpath)
library(dplyr)
library(readxl)
library(car)
library(glmnet)
library(Hmisc)
library(rms)
library(gridExtra)
library(ggpubr)
library(ggplot2)
library(synthpop)
library(pmsampsize)
library(selectiveInference)
library(plyr)
library(vcd)
library(DiagrammeR)
library(pROC)
###### Give your path of data
mydatapath="C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/data/IPD data from 6 Biogen trials"
mydatapath1="C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/Placebo Arms"
######## load data
###cleaning the data from BIOGEN, defined the outcomes in columns: RELAPSE02Year, RELAPSE01Year, names of Treatments and Drugs
cleanBIOGENtrials<-cleanBIOGENtrials.fun(mydatapath)
PlaceboArms<-cleanPLACEBOtrials.fun(mydatapath1)
RCTs0<-cleanBIOGENtrials$adsl01
###drop SENTTINEL STUDY because of combination of treatments and
### drop ADVANCE study because does not provide information for Relapse in 2 years (only for 1 year)
RCTs<-RCTs0[RCTs0$STUDYID!="SENTINEL" & RCTs0$STUDYID!="ADVANCE" ,]
### Select variables that I need- exclude variables with a huge ammount of missing values (more than 50%),
#exclude factors with just one category, exclude factors that are transformations from already existing variables)
#exclude highly correlated variables
###and recode them in numerical values (e.g. Male=1, Female=0)
## transformations of continuous variables to approximate normal distribution
MSrelapse<-numericalDataRisk.fun(RCTs)  ##final full dataset
source('EPVandSampleSize.R')
######## Model 1 - results of LASSO model with LASSO shrinkage
LASSOModel<-RiskModels.fun(MSrelapse,"LASSOModel")
#########  Model 2 - Results of Pre-specified model using Penalized Maximum Likelihood Estimation for shrinkage
PreSpecifiedModel<-RiskModels.fun(MSrelapse,"PreSpecifiedModel")
#########################   END    #################################################################
rm(list=ls())
###load the needed libraries
library(devtools)
library(R2jags)
library(dplyr)
library(glmpath)
library(car)
library(readxl)
library(rms)
library(glmnet)
library(gridExtra)
library(ggpubr)
library(ggplot2)
library(Hmisc)
library(synthpop)
library(pmsampsize)
library(selectiveInference)
library(plyr)
library(vcd)
library(pROC)
library(metafor)
library(meta)
library(netmeta)
library(DiagrammeR)
###### Give your path of data
mydatapath="C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/data/IPD data from 6 Biogen trials"
mydatapath1="C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/Placebo Arms"
######## load data
###cleaning the data from BIOGEN, defined the outcomes in columns: RELAPSE02Year, RELAPSE01Year, names of Treatments and Drugs
cleanBIOGENtrials<-cleanBIOGENtrials.fun(mydatapath)
PlaceboArms<-cleanPLACEBOtrials.fun(mydatapath1)
RCTs0<-cleanBIOGENtrials$adsl01
###drop SENTTINEL STUDY because of combination of treatments and
### drop ADVANCE study because does not provide information for Relapse in 2 years (only for 1 year)
RCTs<-RCTs0[RCTs0$STUDYID!="SENTINEL" & RCTs0$STUDYID!="ADVANCE" ,]
#########################   END    #################################################################
rm(list=ls())
###load the needed libraries
library(devtools)
install_github("htx-r/CleaningData",force=TRUE)
library(CleaningData)
library(R2jags)
library(dplyr)
library(glmpath)
library(readxl)
library(car)
library(glmnet)
library(Hmisc)
library(rms)
library(gridExtra)
library(ggpubr)
library(ggplot2)
library(synthpop)
library(pmsampsize)
library(selectiveInference)
library(plyr)
library(vcd)
library(pROC)
library(DiagrammeR)
###### Give your path of data
mydatapath="C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/data/IPD data from 6 Biogen trials"
mydatapath1="C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/Placebo Arms"
######## load data
###cleaning the data from BIOGEN, defined the outcomes in columns: RELAPSE02Year, RELAPSE01Year, names of Treatments and Drugs
cleanBIOGENtrials<-cleanBIOGENtrials.fun(mydatapath)
PlaceboArms<-cleanPLACEBOtrials.fun(mydatapath1)
RCTs0<-cleanBIOGENtrials$adsl01
###drop SENTTINEL STUDY because of combination of treatments and
### drop ADVANCE study because does not provide information for Relapse in 2 years (only for 1 year)
RCTs<-RCTs0[RCTs0$STUDYID!="SENTINEL" & RCTs0$STUDYID!="ADVANCE" ,]
### Select variables that I need- exclude variables with a huge ammount of missing values (more than 50%),
#exclude factors with just one category, exclude factors that are transformations from already existing variables)
#exclude highly correlated variables
###and recode them in numerical values (e.g. Male=1, Female=0)
## transformations of continuous variables to approximate normal distribution
source("R/numericalDataRisk.fun.R")
MSrelapse<-numericalDataRisk.fun(RCTs)  ##final full dataset
source('EPVandSampleSize.R')
######## Model 1 - results of LASSO model with LASSO shrinkage
source("R/RiskModels.fun.R")
LASSOModel<-RiskModels.fun(MSrelapse,"LASSOModel")
#########  Model 2 - Results of Pre-specified model using Penalized Maximum Likelihood Estimation for shrinkage
PreSpecifiedModel<-RiskModels.fun(MSrelapse,"PreSpecifiedModel")
#Step 3. Bootstrap calibration and discrimination by using the same bootstrap sample for two models each time
###needs more than 3 hours to run! You can skip it without any problem further
###Performance table of models : discrimination and calibration
source("R/BootstrapValidation.fun.R")
#Step 4. Create a dataset that includes Risk's and logit Risk's predictions for each individual and for both models
##Also make treatment and studies numerical values
source("RiskData.R")
#Step 5. Source the script for the plots of risk score
source('Plots.R')
#Step 1.  Add proper columns in the RiskData, like arm, meanRisk, etc.
source('DataForIPDNMR.R')
#Step 2. Run the model & results & check of traceplots
source("R/modelIPDNMR.R")
IPDNMRJAGSresultsLASSO <- jags.parallel(data = jagsdataIPDNMRLASSO,inits=NULL,parameters.to.save = c('gamma.w', 'logitpplacebo','gamma', 'ORref','delta','u','logitp'),model.file = modelIPDNMR,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
# Results using LASSO model
print(IPDNMRJAGSresultsLASSO,varname=c("gamma.w","ORref","u","delta"))
IPDNMRJAGSresultsPreSpecified <- jags.parallel(data = jagsdataIPDNMRPreSpecified,inits=NULL,parameters.to.save = c('gamma.w', 'logitpplacebo','gamma', 'ORref','delta','u','logitp'),model.file = modelIPDNMR,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
# Results using Pellegrini's model
print(IPDNMRJAGSresultsPreSpecified,varname=c("gamma.w","ORref","u","delta"))
#Step 3. Plot of IPD NMR with both models
source('GraphForPredictedRisk.R')
############################ All tables and figures of presented in the paper #########################
source('Paper - Tables and Figures.R')
#Table 1
AFFIRM
CONFIRM
DEFINE
Placebo
#Table 2
Table_LASSOModel
Table_PreSpecifiedModel
IPDNMR_Table
#Table 4
##predicted probabilities to relapse in 2 years
round(LASSOtable,0) #for LASSO model
round(PreSpecifiedtable,0) #for pre-specified model
###ORs of relapsing in 2 years
round(LASSOtableOR,2) #for LASSO model
round(PreSpecifiedtableOR,2) #for pre-specified model
#Figure 1
ggarrange(PrognosticRiskLASSO,PrognosticRiskPreSpecified,ncol = 1,nrow = 2,labels = c("A  LASSO model","B  Pre-specified model"), hjust=-0.2,font.label = list(size = 11))
#Figure 2
ggarrange(IPDplotLASSO,IPDplotPreSpecified,ncol = 1,nrow = 2,labels = c("A","B"),font.label = list(size = 11))
#Appendix figure 1
ggarrange(IPDplotLASSO_OR,IPDplotPreSpecified_OR,ncol = 1,nrow = 2,labels = c("A","B"),font.label = list(size = 11))
#Appendix figure 3
Flowchart
############################# R-shiny app ##################################################################
source('R-shiny.R')
shinyApp(ui = ui, server = server) #also available in https://cinema.ispm.unibe.ch/shinies/koms/
#########################   END    #################################################################
rm(list=ls())
###load the needed libraries
library(devtools)
install_github("htx-r/CleaningData",force=TRUE)
library(CleaningData)
library(R2jags)
library(dplyr)
library(glmpath)
library(readxl)
library(glmnet)
library(car)
library(Hmisc)
library(rms)
library(gridExtra)
library(ggpubr)
library(ggplot2)
library(pmsampsize)
library(selectiveInference)
library(synthpop)
library(plyr)
library(vcd)
library(pROC)
library(DiagrammeR)
###### Give your path of data
mydatapath="C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/data/IPD data from 6 Biogen trials"
######## load data
###cleaning the data from BIOGEN, defined the outcomes in columns: RELAPSE02Year, RELAPSE01Year, names of Treatments and Drugs
cleanBIOGENtrials<-cleanBIOGENtrials.fun(mydatapath)
mydatapath1="C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/Placebo Arms"
PlaceboArms<-cleanPLACEBOtrials.fun(mydatapath1)
###drop SENTTINEL STUDY because of combination of treatments and
### drop ADVANCE study because does not provide information for Relapse in 2 years (only for 1 year)
RCTs<-RCTs0[RCTs0$STUDYID!="SENTINEL" & RCTs0$STUDYID!="ADVANCE" ,]
RCTs0<-cleanBIOGENtrials$adsl01
### Select variables that I need- exclude variables with a huge ammount of missing values (more than 50%),
#exclude factors with just one category, exclude factors that are transformations from already existing variables)
#exclude highly correlated variables
###and recode them in numerical values (e.g. Male=1, Female=0)
## transformations of continuous variables to approximate normal distribution
source("R/numericalDataRisk.fun.R")
MSrelapse<-numericalDataRisk.fun(RCTs)  ##final full dataset
RCTs0<-cleanBIOGENtrials$adsl01
###drop SENTTINEL STUDY because of combination of treatments and
### drop ADVANCE study because does not provide information for Relapse in 2 years (only for 1 year)
RCTs<-RCTs0[RCTs0$STUDYID!="SENTINEL" & RCTs0$STUDYID!="ADVANCE" ,]
### Select variables that I need- exclude variables with a huge ammount of missing values (more than 50%),
#exclude factors with just one category, exclude factors that are transformations from already existing variables)
#exclude highly correlated variables
###and recode them in numerical values (e.g. Male=1, Female=0)
## transformations of continuous variables to approximate normal distribution
source("R/numericalDataRisk.fun.R")
MSrelapse<-numericalDataRisk.fun(RCTs)  ##final full dataset
source('EPVandSampleSize.R')
######## Model 1 - results of LASSO model with LASSO shrinkage
source("R/RiskModels.fun.R")
LASSOModel<-RiskModels.fun(MSrelapse,"LASSOModel")
#########  Model 2 - Results of Pre-specified model using Penalized Maximum Likelihood Estimation for shrinkage
PreSpecifiedModel<-RiskModels.fun(MSrelapse,"PreSpecifiedModel")
#Step 3. Bootstrap calibration and discrimination by using the same bootstrap sample for two models each time
###needs more than 3 hours to run! You can skip it without any problem further
###Performance table of models : discrimination and calibration
source("R/BootstrapValidation.fun.R")
#Step 4. Create a dataset that includes Risk's and logit Risk's predictions for each individual and for both models
##Also make treatment and studies numerical values
source("RiskData.R")
#Step 5. Source the script for the plots of risk score
source('Plots.R')
#Step 1.  Add proper columns in the RiskData, like arm, meanRisk, etc.
source('DataForIPDNMR.R')
#Step 2. Run the model & results & check of traceplots
source("R/modelIPDNMR.R")
IPDNMRJAGSresultsLASSO <- jags.parallel(data = jagsdataIPDNMRLASSO,inits=NULL,parameters.to.save = c('gamma.w', 'logitpplacebo','gamma', 'ORref','delta','u','logitp'),model.file = modelIPDNMR,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
IPDNMRJAGSresultsPreSpecified <- jags.parallel(data = jagsdataIPDNMRPreSpecified,inits=NULL,parameters.to.save = c('gamma.w', 'logitpplacebo','gamma', 'ORref','delta','u','logitp'),model.file = modelIPDNMR,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
# Results using LASSO model
print(IPDNMRJAGSresultsLASSO,varname=c("gamma.w","ORref","u","delta"))
# Results using Pellegrini's model
print(IPDNMRJAGSresultsPreSpecified,varname=c("gamma.w","ORref","u","delta"))
#Step 3. Plot of IPD NMR with both models
source('GraphForPredictedRisk.R')
############################ All tables and figures of presented in the paper #########################
source('Paper - Tables and Figures.R')
#Figure 1
ggarrange(PrognosticRiskLASSO,PrognosticRiskPreSpecified,ncol = 1,nrow = 2,labels = c("A  LASSO model","B  Pre-specified model"), hjust=-0.2,font.label = list(size = 11))
#Figure 2
ggarrange(IPDplotLASSO,IPDplotPreSpecified,ncol = 1,nrow = 2,labels = c("A","B"),font.label = list(size = 11))
#Figure 1
ggarrange(PrognosticRiskLASSO,PrognosticRiskPreSpecified,ncol = 1,nrow = 2,labels = c("A  LASSO model","B  Pre-specified model"), hjust=-0.2,font.label = list(size = 15))
help(ggarrange)
#Figure 2
ggarrange(IPDplotLASSO,IPDplotPreSpecified,ncol = 1,nrow = 2,labels = c("A","B"),font.label = list(size = 11)) + font("xlab", size=12)
#Figure 2
ggarrange(IPDplotLASSO,IPDplotPreSpecified,ncol = 1,nrow = 2,labels = c("A","B"),font.label = list(size = 11)) + font("xlab", size=13) + font("ylab", size=13)
#Figure 2
ggarrange(IPDplotLASSO,IPDplotPreSpecified,ncol = 1,nrow = 2,labels = c("A","B"),font.label = list(size = 11)) + font("xlab", size=13) + font("ylab", size=13)
#Figure 2
ggarrange(IPDplotLASSO,IPDplotPreSpecified,ncol = 1,nrow = 2,labels = c("A","B"),font.label = list(size = 11)) + font("xlab", size=15) + font("ylab", size=15)
#Figure 2
ggarrange(IPDplotLASSO,IPDplotPreSpecified,ncol = 1,nrow = 2,labels = c("A","B"),font.label = list(size = 11)) + font("xlab", size=20) + font("ylab", size=20)
#Figure 2
ggarrange(IPDplotLASSO,IPDplotPreSpecified,ncol = 1,nrow = 2,labels = c("A","B"),font.label = list(size = 11)) + font("xlab", size=20, face="bold") + font("ylab", size=20, face=bold)
#Figure 2
ggarrange(IPDplotLASSO,IPDplotPreSpecified,ncol = 1,nrow = 2,labels = c("A","B"),font.label = list(size = 11)) + font("xlab", size=20, face="bold") + font("ylab", size=20, face="bold")
#Appendix figure 1
ggarrange(IPDplotLASSO_OR,IPDplotPreSpecified_OR,ncol = 1,nrow = 2,labels = c("A","B"),font.label = list(size = 11))
#########################   END    #################################################################
rm(list=ls())
###load the needed libraries
library(devtools)
install_github("htx-r/CleaningData",force=TRUE)
library(CleaningData)
library(R2jags)
library(dplyr)
library(glmpath)
library(readxl)
library(car)
library(glmnet)
library(Hmisc)
library(rms)
library(gridExtra)
library(ggpubr)
library(ggplot2)
library(synthpop)
library(pmsampsize)
library(selectiveInference)
library(plyr)
library(vcd)
library(pROC)
library(DiagrammeR)
###### Give your path of data
mydatapath="C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/data/IPD data from 6 Biogen trials"
mydatapath1="C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/Placebo Arms"
######## load data
###cleaning the data from BIOGEN, defined the outcomes in columns: RELAPSE02Year, RELAPSE01Year, names of Treatments and Drugs
cleanBIOGENtrials<-cleanBIOGENtrials.fun(mydatapath)
PlaceboArms<-cleanPLACEBOtrials.fun(mydatapath1)
RCTs0<-cleanBIOGENtrials$adsl01
###drop SENTTINEL STUDY because of combination of treatments and
### drop ADVANCE study because does not provide information for Relapse in 2 years (only for 1 year)
RCTs<-RCTs0[RCTs0$STUDYID!="SENTINEL" & RCTs0$STUDYID!="ADVANCE" ,]
### Select variables that I need- exclude variables with a huge ammount of missing values (more than 50%),
#exclude factors with just one category, exclude factors that are transformations from already existing variables)
#exclude highly correlated variables
###and recode them in numerical values (e.g. Male=1, Female=0)
## transformations of continuous variables to approximate normal distribution
source("R/numericalDataRisk.fun.R")
MSrelapse<-numericalDataRisk.fun(RCTs)  ##final full dataset
#######EPV of candidate variables
dataset<-MSrelapse
todrop<-c("STUDYID","USUBJID","TRT01A","RELAPSE1year")
X<-dataset[ , !(names(dataset) %in% todrop)]
X<-na.omit(X)
MSrelapse<-numericalDataRisk.fun(RCTs)  ##final full dataset
#######EPV of candidate variables
dataset<-MSrelapse
todrop<-c("STUDYID","USUBJID","TRT01A","RELAPSE1year")
X<-dataset[ , !(names(dataset) %in% todrop)]
X<-na.omit(X)
fullmodel<-lrm(RELAPSE2year~rcs(AGE,4)+rcs(GDVOLBL,4)+SEX+RACE+rcs(HEIGHTBL,4)+rcs(WEIGHTBL,4)+rcs(EDSSBL,4)+rcs(ONSYRS,4)+DOMIHAND+rcs(RLPS1YR,4)+rcs(TRELMOS,4)+MCDBL+PRMSGR+REGION+rcs(T25FWABL,4)+rcs(NHPTMBL,4)+rcs(PASATABL,4)+rcs(VFT25BL,4)+rcs(SFPCSBL,4)+rcs(SFMCSBL,4)+rcs(VASBL,4)+VISUALBL+BRAINBL+PYRAMIBL+SENSORBL+BOWLBLBL+CEREBRBL+DISTWKBL+rcs(T25FWPC,4)+rcs(NHPTMPC,4)+rcs(PASATPC,4),x=TRUE,y=TRUE,data=X)
anova(fullmodel)
fullmodel<-lrm(RELAPSE2year~AGE+SEX+REGION+RACE+GDVOLBL+HEIGHTBL+WEIGHTBL+EDSSBL+ONSYRS+DOMIHAND+RLPS1YR+TRELMOS+MCDBL+PRMSGR+REGION+T25FWABL+NHPTMBL+PASATABL+VFT25BL+SFPCSBL+SFMCSBL+VASBL+VISUALBL+BRAINBL+PYRAMIBL+SENSORBL+BOWLBLBL+CEREBRBL+DISTWKBL+T25FWPC+NHPTMPC+PASATPC,x=TRUE,y=TRUE,data=X)
df<-fullmodel[["stats"]][["d.f."]]
events<- nrow(X[which(X$RELAPSE2year==1),])
EPV<-events/df
cat("The EPV of the LASSO model is", EPV, fill=TRUE)
Fmodel<-lrm(RELAPSE2year~AGE+SEX+RACE+EDSSBL+ONSYRS+RLPS1YR+TRELMOS+PRMSGR+T25FWABL+NHPTMBL+PASATABL+VFT25BL+SFPCSBL+SFMCSBL,x=TRUE,y=TRUE,data=X)
Fdf<-Fmodel[["stats"]][["d.f."]]
Fevents<- nrow(X[which(X$RELAPSE2year==1),])
Fevents
events
load("C:/Users/kc19o338/Desktop/Real world predictions project/All data.RData")
#class(GraphdataF$`Baseline Risk`)
#GraphdataF$`Baseline Risk`<-as.integer(GraphdataF$`Baseline Risk`)
#Graphdata1<-GraphdataF[,3]
#Graphdata2<-GraphdataF[,2]
#round(GraphdataF[,2],0)
#Graphdata3<-GraphdataF[,1]
#Graphdata<-cbind(Graphdata1,Graphdata2,Graphdata3)
#colnames(Graphdata)<-c("Treatment", "Predicted probability to relapse in 2 years %", "Baseline risk score")
#GraphdataF<-Graphdata
#write.xlsx(Graphdata,"Data for the Graph7.xls",row.names = F)
library(readxl)
library(shiny)
library(shinythemes)
library(gridExtra)
library(ggpubr)
library(ggplot2)
library(devtools)
